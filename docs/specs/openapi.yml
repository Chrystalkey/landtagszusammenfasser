openapi: 3.0.0
info:
  title: "Specification for the Landtagszusammenfasser Project"
  version: "0.1.0"
  description: "Beschreibung der API des LTZF Projekts. Alle Listen, die vom Server kommen sind sortiert in\n\
  1. datum der letzten modifikation, absteigend\n\
  2. lexikographisch des titels falls nicht vorhanden"
paths:
  /api/v1/vorgang/{vorgang_id}:
    get:
      operationId: "vorgang_get_by_id"
      description: "Returns a vorgang by id"
      parameters:
        - name: "vorgang_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "If-Modified-Since"
          in: "header"
          required: false
          schema:
            type: "string"
            format: "date-time"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vorgang"
        "304":
          description: "No new changes"
        "404":
          description: "Content not found"
    put:
      operationId: "vorgang_put"
      description: API Access for the Admins without the merge just replacing vorgang
      parameters:
        - name: "vorgang_id"
          in: "path"
          required: true
          description: "The API ID of the vorgang that is to be affected"
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vorgang"
      responses:
        201:
          description: "Created"
        204:
          description: "Content Unchanged"
        401:
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - apiKey: [] 
    delete:
      operationId: vorgang_delete
      parameters:
        - name: "vorgang_id"
          in: "path"
          required: true
          description: "API ID of the thing to be deleted"
          schema:
            type: "string"
            format: "uuid"
      responses:
        401:
          $ref: "#/components/responses/UnauthorizedError"
        204:
          description: "Deleted Successfully"
        404:
          description: "No Element with this ID"
      security:
        - apiKey: [] 
  /api/v1/vorgang:
    get:
      operationId: "vorgang_get"
      description: "Returns a filtered List of vorgang"
      responses:
        "200":
          $ref: "#/components/responses/VorgangGetResponse"
        "204":
          description: "No Content found for the specified parameters"
        "304":
          description: "No new changes"
        "416":
          description: "Request Range not satisfiable. Dates before the existence of the BRP or in the future are excluded for example"
        "400":
          description: "Bad Request"

      parameters:
        - name: "If-Modified-Since"
          in: "header"
          required: false
          schema:
            type: "string"
            format: "date-time"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
        - name: "offset"
          in: "query"
          required: false
          schema:
            type: "integer"
        - name: "initiator-contains-any"
          in: query
          required: false
          description: "If any of the listed Initiators matches the Initiator, it is filtered out"
          schema:
            type: array
            items:
              type: string
        - name: "ggtyp"
          in: query
          required: false
          description: "Gesetzgebungstyp"
          schema:
            $ref: "#/components/schemas/vorgangstyp"
    post:
      operationId: "vorgang_post"
      description: "Pushing a new vorgang"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vorgang"
      parameters:
        - name: "collector"
          in: query
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "201":
          description: "Successfully Integrated the Object"
        "400": 
          description: "Bad Request"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "409": 
          description: "Conflict. This Vorgang-ID already exists"
      security:
        - apiKey: []
  /api/v1/auth:
    delete:
      operationId: "auth_delete"
      description: "Deletes an API Key from the Database"
      parameters:
        - name: "api-key-delete"
          in: "header"
          required: true
          description: "The API Key that is to be deleted"
          schema:
            type: "string"
      responses:
        "204":
          description: "API Key was deleted successfully"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "API Key not found"
      security:
        - apiKey: [] 
    post:
      operationId: "auth_post"
      description: "Adds a new API Key to the Database"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_api_key"
      responses:
        "201":
          $ref: "#/components/responses/ApiKeyCreated"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - apiKey: [] 
components:
  securitySchemes:
      apiKey:
        description: API key of the Collector
        type: apiKey
        name: X-API-Key
        in: header
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
    ApiKeyCreated:
      description: "API Key was created successfully"
      content:
        text/plain:
          schema:
            type: string
            description: "The API Key that was created"
    VorgangGetResponse:
      description: "Antwort auf eine gefilterte Anfrage zu Vorgang"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              payload: 
                type: "array"
                items:
                  $ref: "#/components/schemas/vorgang"
  schemas:
    create_api_key:
      type: "object"
      required:
        - "scope"
      properties:
        scope:
          type: "string"
          enum:
            - "admin"
            - "collector"
            - "keyadder"
        expires_at:
          type: "string"
          format: "date-time"
          description: "The expiration date of the API Key"
    parlament:
      type: "string"
      enum:
        - "BT"
        - "BR"
        - "BV"
        - "EK"
        - "BB"
        - "BY"
        - "BE"
        - "HB"
        - "HH"
        - "HE"
        - "MV"
        - "NI"
        - "NW"
        - "RP"
        - "SL"
        - "SN"
        - "TH"
        - "SH"
        - "BW"
        - "ST"
    vorgangstyp:
      type: "string"
      enum:
        - "gg-einspruch"    # Bundesgesetz Einspruch
        - "gg-zustimmung"   # Bundesgesetz Zustimmungspflich
        - "gg-land-parl"    # Landesgesetz, normal
        - "gg-land-volk"    # Landesgesetz, Volksgesetzgebung
        - "sonstig"         # anders, email me
      description: "Der Gesetzgebungstrack auf dem wir uns befinden. Zum Beispiel: BundesGesetzGebung - Einspruchsgesetz. Legt fest, welche Stationen hier möglich sind"
    stationstyp:
      type: "string"
      description: "Stationen, die ein Gesetz in verschiedenen Ausformungen durchlaufen kann. Im Prinzip ist die Festlegung auf Prä / Postparlamentarisch arbiträr."
      enum:
        - "preparl-regent" # Referentenentwurf / Regierungsentwurf
        - "preparl-eckpup" # Eckpunktepapier / Parlamentsentwurf
        - "preparl-regbsl" # Kabinettsbeschluss / Regierungsbeschluss
        - "preparl-vbegde" # Volksbegehren / Diskussionsentwurf
        - "parl-initiativ" # Gesetzesinitiative
        - "parl-ausschber" # Beratung im Ausschuss
        - "parl-vollvlsgn" # Vollversammlung / Lesung
        - "parl-akzeptanz" # Schlussabstimmung & Akzeptanz des Parlaments
        - "parl-ablehnung" # Schlussabstimmung & Ablehnung des Parlaments
        - "parl-ggentwurf" # Gegenentwurf des Parlaments auf abgel. Volksbegehren
        - "postparl-vesja" # Volksentscheid nach Parlamentsbeschluss & Akzeptanz
        - "postparl-vesne" # Volksentscheid nach Parlamentsbeschluss & Ablehnung
        - "postparl-gsblt" # Veröffentlichung im Gesetzesblatt
        - "postparl-kraft" # In Kraft getreten
        - "sonstig"        # anders, email me
    identifikatortyp:
      type: "string"
      enum:
        - "initdrucks"
        - "vorgnr"
        - "sonstig"        # anders, email me
      description: "An identification for the whole process from start to finish"
    dokumententyp:
      type: "string"
      enum:
        - "entwurf"
        - "drucksache"
        - "protokoll"
        - "topliste"
        - "stellungnahme"
        - "sonstig"       # anders, email me
      description: "The type of a document"
    dokument:
      type: "object"
      required:
        - "titel"
        - "hash"
        - "typ"
        - "last_mod"
        - "link"
      properties:
        volltext:
          type: "string"
        titel:
          type: "string"
        last_mod:
          type: "string"
          format: "date-time"
        link:
          type: "string"
          format: "uri"
        hash:
          type: "string"
        zusammenfassung:
          type: "string"
        schlagworte:
          type: "array"
          items:
            type: "string"
        autorpersonen:
          type: "array"
          items:
            type: "string"
            example: "Ach, Manfred (CSU)"
            description: "The authors of the document if they are persons"
        autoren:
          type: "array"
          items:
            type: "string"
            example: "Staatsregierung, Fraktion die Grünen, Fraktion CDU/CSU"
            description: "The authors of the document if they are not persons, this is to be done at the collector level"
        typ:
          $ref: "#/components/schemas/dokumententyp"
    stellungnahme:
      type: "object"
      description: "Wrapper um `dokument`, der noch ein bisschen mehr Kontext mitgibt."
      required:
        - "dokument"
        - "meinung"
      properties:
        dokument:
          $ref: "#/components/schemas/dokument"
        meinung:
          type: "integer"
          description: "Meinung des Stellungnehmenden im Intervall [1;10]. Unbekannte Meinung: 0"
          minimum: 0
          maximum: 10
        lobbyregister_link:
          type: "string"
          format: "uri"
        volltext:
          type: "string"
    station:
      type: "object"
      description: "Station ist in vielerlei hinsicht das Kernstück der API der Vorgänge. Jeder Vorgang besteht aus Stationen und die Stationen haben nur wenige verpflichtende Datenfelder.\
                    Je nach `typ` sind andere Felder nicht-optional. Für weitere Details, siehe die docs"
      required:
        - "typ"
        - "datum"
        - "dokumente"
        - "parlament"
      properties:
        titel:
          type: "string"
          description: "Optionaler Titel, falls die restlichen Daten keinen hinreichenden Rückschluss zulassen"
        zeitpunkt:
          type: "string"
          format: "date-time"
        ausschusssitzungen:
          type: "array"
          description: "Liste von Ausschussitzungen. Kann leer sein, wenn es keine Ausschussberatung ist"
          items:
            $ref: "#/components/schemas/ausschusssitzung"
        dokumente:
          type: "array"
          items:
            $ref: "#/components/schemas/dokument"
        betroffene_texte:
          type: "array"
          items:
            type: "string"
            example: "§ 1 Abs. 1 Satz 1"
            description: "The text that is affected by the station"
        link:
          type: "string"
          format: "uri"
        parlament:
          $ref: "#/components/schemas/parlament"
        schlagworte:
          type: "array"
          items:
            type: "string"
            format: "lowercase"
        stellungnahmen:
          type: "array"
          items: 
            $ref: "#/components/schemas/stellungnahme"
        typ:
          $ref: "#/components/schemas/stationstyp"
        trojanergefahr:
          description: "Zahl im Intervall [1;10], die die Gefahr einer Schummelei angeben"
          type: "integer"
          minimum: 1
          maximum: 10
    
    vorgang:
      type: "object"
      required:
        - "api_id"
        - "titel"
        - "wahlperiode"
        - "verfassungsaendernd"
        - "initiatoren"
        - "typ"
        - "stationen"
      properties:
        api_id:
          type: "string"
          format: "uuid"
          example: "123e4567-e89b-12d3-a456-426614174000"
        titel:
          type: "string"
        wahlperiode:
          type: "integer"
          description: "Nummer der Wahlperiode, in der der Vorgang stattfindet"
          minimum: 0
        verfassungsaendernd:
          type: "boolean"
        initiatoren:
          type: "array"
          items:
            type: "string"
            example: "Staatsministerium für Justiz"
            description: "The initiators of the vorgang. This is meant for institutions or fractions."
        initiator_personen:
          type: "array"
          items:
            type: "string"
            example: "Ach, Manfred (CSU)"
            description: "The authors of the document if they are persons"
        typ:
          $ref: "#/components/schemas/vorgangstyp"
        ids:
          type: "array"
          items:
            $ref: "#/components/schemas/identifikator"
        links:
          type: "array"
          items:
            type: "string"
            format: "uri"
        stationen:
          type: "array"
          items:
            $ref: "#/components/schemas/station"
    identifikator:
      type: "object"
      required:
        - "id"
        - "typ"
      properties:
        id: 
          type: "string"
          example: "123e4567-e"
        typ:
          $ref: "#/components/schemas/identifikatortyp"

    ausschuss:
      type: "object"
      required:
        - "parlament"
      properties:
        parlament:
          $ref: "#/components/schemas/parlament"
        name:
          type: "string"
          example: "Ausschuss für Inneres und Gemüseauflauf"
    top:
      type: "object"
      required: 
        - "titel"
      properties:
        titel:
          type: "string"
        vorgang_id:
          type: "string"
          format: "uuid"
    experte:
      type: "object"
      properties:
        name:
          type: "string"
        fachgebiet:
          type: "string"
    ausschusssitzung:
      type: "object"
      description: "Sitzung oder Anhörung. Eine Anhörung wird es, wenn Experten geladen werden"
      properties:
        termin:
          type: "string"
          format: "date-time"
        ausschuss:
          $ref: "#/components/schemas/ausschuss"
        tops:
          type: "array"
          items:
            $ref: "#/components/schemas/top"
        experten:
          type: "array"
          description: "Optional: Liste von geladenen Experten. (Anhörung)"
          items:
            $ref: "#/components/schemas/experte"